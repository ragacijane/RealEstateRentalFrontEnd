/* color palette from <https://github.com/vuejs/theme> */
:root {
  --vt-c-white: #ffffff;
  --vt-c-white-soft: #f8f8f8;
  --vt-c-white-mute: #f2f2f2;

  --vt-c-black: #181818;
  --vt-c-black-soft: #222222;
  --vt-c-black-mute: #282828;

  --vt-c-indigo: #2c3e50;

  --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
  --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
  --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
  --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);

  --vt-c-text-light-1: var(--vt-c-indigo);
  --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
  --vt-c-text-dark-1: var(--vt-c-white);
  --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
}

/* semantic color variables for this project */
:root {
  --color-background: var(--vt-c-white);
  --color-background-soft: var(--vt-c-white-soft);
  --color-background-mute: var(--vt-c-white-mute);

  --color-border: var(--vt-c-divider-light-2);
  --color-border-hover: var(--vt-c-divider-light-1);

  --color-heading: var(--vt-c-text-light-1);
  --color-text: var(--vt-c-text-light-1);

  --section-gap: 160px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-background: var(--vt-c-black);
    --color-background-soft: var(--vt-c-black-soft);
    --color-background-mute: var(--vt-c-black-mute);

    --color-border: var(--vt-c-divider-dark-2);
    --color-border-hover: var(--vt-c-divider-dark-1);

    --color-heading: var(--vt-c-text-dark-1);
    --color-text: var(--vt-c-text-dark-2);
  }
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  font-weight: normal;
}

body {
  min-height: 100vh;
  color: var(--color-text);
  background: var(--color-background);
  transition:
    color 0.5s,
    background-color 0.5s;
  line-height: 1.6;
  font-family:
    Inter,
    -apple-system,
    BlinkMacSystemFont,
    'Segoe UI',
    Roboto,
    Oxygen,
    Ubuntu,
    Cantarell,
    'Fira Sans',
    'Droid Sans',
    'Helvetica Neue',
    sans-serif;
  font-size: 15px;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
////////////////////////////////////////////////////////////////////////////////////////////////////
@import './base.css';

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  font-weight: normal;
}

a,
.green {
  text-decoration: none;
  color: hsla(160, 100%, 37%, 1);
  transition: 0.4s;
  padding: 3px;
}

@media (hover: hover) {
  a:hover {
    background-color: hsla(160, 100%, 37%, 0.2);
  }
}

@media (min-width: 1024px) {
  body {
    display: flex;
    place-items: center;
  }

  #app {
    display: grid;
    grid-template-columns: 1fr 1fr;
    padding: 0 2rem;
  }
}

<template>
  <main>
    <h1>User View</h1>

    <v-sheet class="mx-auto" elevation="8" max-width="800">
      <div class="d-flex fill-height align-center justify-center">
        <v-expand-transition>
          <v-sheet v-if="model !== null">
            <v-img :src="images[model]" alt="Image" class="image-item-big" />
          </v-sheet>
        </v-expand-transition>
      </div>
      <div class="d-flex align-center justify-center">
        <input
          type="file"
          id="file-input"
          style="display: none"
          accept="image/*"
          multiple
          @change="handleFileInputChange"
        />
        <v-btn icon class="mx-2" @click="openFileInput">
          <v-icon>mdi-camera</v-icon>
        </v-btn>
        <v-btn icon class="mx-2" @click="">
          <v-icon color="primary">mdi-home</v-icon>
        </v-btn>
        <v-btn icon class="mx-2" @click="deletePhoto(model ?? -1)">
          <v-icon>mdi-delete</v-icon>
        </v-btn>
      </div>

      <v-slide-group v-model="model" class="pa-4" center-active show-arrows>
        <v-slide-group-item
          v-for="(image, index) in images"
          :key="index"
          v-slot="{ isSelected, toggle }"
        >
          <div class="icon-above-card" @click="toggle">
            <v-icon v-if="index == 0" color="primary">mdi-home</v-icon>
            <v-icon v-else></v-icon>
            <v-card
              color="grey-lighten-1"
              class="ma-4"
              height="200"
              width="120"
              :class="{ 'border-primary': index == 1 }"
            >
              <div class="d-flex fill-height align-center justify-center">
                <v-img :src="image" alt="Image" class="image-item" />
                <div v-if="index == 2" class="absolute-center">
                  <v-icon color="primary">mdi-home</v-icon>
                </div>
              </div>
            </v-card>
          </div>
        </v-slide-group-item>
      </v-slide-group>
    </v-sheet>
  </main>
</template>
/*
<div class="d-flex fill-height align-center justify-center">
        <v-expand-transition>
          <v-sheet v-if="model !== null">
            <v-img :src="images[model]" alt="Image" class="image-item-big" />
          </v-sheet>
        </v-expand-transition>
      </div>
*/